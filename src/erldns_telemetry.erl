%% Copyright (c) 2012-2018, DNSimple Corporation
%%
%% Permission to use, copy, modify, and/or distribute this software for any
%% purpose with or without fee is hereby granted, provided that the above
%% copyright notice and this permission notice appear in all copies.
%%
%% THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
%% WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
%% MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
%% ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
%% WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
%% ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
%% OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

%% @doc Telemetry event handler
-module(erldns_telemetry).

-include_lib("kernel/include/logger.hrl").

-export([init/0, handle_event/4]).

%% @doc Handle telemetry events.
handle_event(EventName, Measurements, Metadata, _Config) ->
  ?LOG_ERROR("%p %p %p", [EventName, Measurements, Metadata]).

%% @doc Initialize event handler.
init() ->
  ?LOG_DEBUG("Initializing Telemetry event handler"),

  Events = [
    % These events are generated in zone processing,
    % By default we log them.

    [erldns, erldns_zone_loader, error],
    [erldns, erldns_zone_parser, error],
    [erldns, erldns_zone_encoder, error],
    [erldns, erldns_storage, error]

    % These events are generated by request processing,
    % By default, we don't do anything with them

    % [erldns, accepted],
    % [erldns, cache, expired],
    % [erldns, cache, hit],
    % [erldns, cache, miss],
    % [erldns, cache, packet, hit],
    % [erldns, cache, packet, miss],
    % [erldns, dnssec, request],
    % [erldns, dropped],
    % [erldns, empty],
    % [erldns, error],
    % [erldns, garbage],
    % [erldns, handle, 'end'],
    % [erldns, handle, start],
    % [erldns, handled],
    % [erldns, handoff],
    % [erldns, invalid],
    % [erldns, refused],
    % [erldns, request],
    % [erldns, response, empty],
    % [erldns, response, refused],
    % [erldns, response],
    % [erldns, servers, started, already],
    % [erldns, servers, started],
    % [erldns, tcp, error],
    % [erldns, tcp, request],
    % [erldns, throttled],
    % [erldns, truncated],
    % [erldns, udp, error],
    % [erldns, udp, request],
    % [erldns, worker, 'end'],
    % [erldns, worker, error],
    % [erldns, worker, start],
  ],
  telemetry:attach_many(?MODULE, Events, fun erldns_telemetry:handle_event/4, #{}).
